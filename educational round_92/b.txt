#include<bits/stdc++.h>
#define int long long
#define uint unsigned long long
#define in(x) int x;cin>>x;
#define w(t) int t; cin>> t; while(t--)
#define Map unordered_map
#define str(x) string x;cin>>x;
#define mk(t,a,n) t* a = new t[n]
#define inp(a,n) for(int i = 0;i<n;i++)cin>>a[i];
#define inf 1e18
#define endl "\n"
#define MOD 1000000007
#define L 2*index+1
#define R 2*index+2
const double pi = 3.14159265358979323846;
using namespace std;
 
int finder(int* st, int si,int ei, int val){
    if(ei<0)return 0;
    if(si>ei){
        return si;
    }
    
    if(si == ei){
        if(val>st[si])return (si + 1);
        
        else return si ;
    }
    
    int ci = (si + ei)/2;
    if(st[ci] == val)return ci;
    
    if(st[ci]>val)return finder(st,si,ci-1,val);
    else if(st[ci]<val) return finder(st,ci + 1,ei,val);
    
}
 
int32_t main(){
    int nt;
    cin>>nt;
    int iim = 0;
    while(nt--){
        iim++;
        in(n);
        in(k);
        in(z);
        mk(int,a,n+1);
        int c = 0;
        int ans = 0;
        
        for(int i = 1;i<=n;i++){cin>>a[i];
        
        if(c<k + 1)ans+=a[i];
        c++;}
        
        
        
        
        
        
        while(z>0){
            if(2*z>k){z--;
                continue;}
            priority_queue<int> maxel;
            int p = k + 1 - 2*z;
            int semi = a[1];
            for(int i = 2;i<=p + 1;i++){
                maxel.push(a[i] + a[i-1]);
                if(i == p+1) continue;
                semi += a[i];
            }
            
            int ind = z;
            int last = -1;
            
            for(int i = 0;i<z;i++){
                if(!maxel.empty()){
                    //if(z == 3)cout<<"top "<<maxel.top()<<endl;
                    semi += maxel.top();
                    last = maxel.top();
                    //maxel.pop();
                }
                else{
                    ind = i;
                    break;
                }
            }
            
            for(int i = p+1;i<=k - 2*ind;i++){
                semi += a[i];
            }
            
            
            ans = max(ans,semi);
            z--;
            
        }
        
        cout<<ans<<endl;
        
        
    }
    return 0;
}
 
 